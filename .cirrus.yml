environment:
    CCACHE_BASEDIR: $CIRRUS_WORKING_DIR

    # Enforce sequential JIT'ing of files for controlled memory usage.
    HILTI_JIT_SEQUENTIAL: 1

    # Branch to use for spicy-plugin and spicy-analyzers tests.
    SPICY_PLUGIN_BRANCH: topic/robin/plugin-reorg

clang9_ubuntu_debug_task:
  container:
    dockerfile: ci/Dockerfile
    cpu: 4
    memory: 12G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1
    LD_LIBRARY_PATH: /usr/lib/llvm-10/lib/clang/10.0.1/lib/linux/

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  # We currently run the build with sanitizers against clang-10 since clang-11 triggers unfixed diagnostics.
  #
  # TODO(bbannier): Switch this job to llvm-11.
  configure_script:   ./ci/run-ci -b build configure debug --cxx-compiler clang++-10 --clang-format `which clang-format-10` --clang-tidy `which clang-tidy-10` --rpath /usr/lib/llvm-10/lib/clang/10.0.1/lib/linux/
  build_script:       ./ci/run-ci -b build build
  test_build_script:  ./ci/run-ci -b build test-build
  test_code_script:   ./ci/run-ci -b build test-code
  install_script:     ./ci/run-ci -b build install
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy*.tar.gz
    type: application/gzip

  on_failure:
    ci_artifacts:
      path: artifacts
    junit_artifacts:
      path: artifacts/diag.xml
      type: text/xml
      format: junit
    clang_artifacts:
        path: build/ci

clang10_lts_ubuntu_release_task:
  container:
    dockerfile: ci/Dockerfile
    cpu: 4
    memory: 8G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:      ./ci/run-ci -b build configure release --cxx-compiler clang++-10 --clang-format `which clang-format-10` --clang-tidy `which clang-tidy-10`
  build_script:          ./ci/run-ci -b build build
  test_build_script:     ./ci/run-ci -b build test-build
  install_script:        ./ci/run-ci -b build install
  cleanup_script:        ./ci/run-ci -b build cleanup
  test_install_script:   ./ci/run-ci -b build test-install
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy*.tar.gz
    type: application/gzip

  on_failure:
    ci_artifacts:
      path: artifacts
    junit_artifacts:
      path: artifacts/diag.xml
      type: text/xml
      format: junit

clang9_lts_ubuntu_release_static_task:
  container:
    dockerfile: ci/Dockerfile
    cpu: 4
    memory: 8G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:      ./ci/run-ci -b build configure release --cxx-compiler clang++-9 --clang-format `which clang-format-10` --clang-tidy `which clang-tidy-10` --build-static-libs
  build_script:          ./ci/run-ci -b build build
  install_script:        ./ci/run-ci -b build install
  cleanup_script:        ./ci/run-ci -b build cleanup
  test_install_script:   ./ci/run-ci -b build test-install

  on_failure:
    ci_artifacts:
      path: artifacts
    junit_artifacts:
      path: artifacts/diag.xml
      type: text/xml
      format: junit

clang11_nightly_task:
  # This task is only executed on main.
  # Failing this task does not fail the build.
  skip: $CIRRUS_BRANCH != 'main' && $CIRRUS_TAG == ''
  allow_failures: true

  container:
    dockerfile: ci/Dockerfile
    cpu: 4
    memory: 8G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1
    LD_LIBRARY_PATH: /usr/lib/llvm-11/lib/clang/9.0.1/lib/linux/

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:      ./ci/run-ci -b build configure release --cxx-compiler clang++-11 --clang-format `which clang-format-11` --clang-tidy `which clang-tidy-11`
  build_script:          ./ci/run-ci -b build build
  test_build_script:     ./ci/run-ci -b build test-build
  install_script:        ./ci/run-ci -b build install
  cleanup_script:        ./ci/run-ci -b build cleanup
  test_install_script:   ./ci/run-ci -b build test-install
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy*.tar.gz
    type: application/gzip

  on_failure:
    ci_artifacts:
      path: artifacts
    junit_artifacts:
      path: artifacts/diag.xml
      type: text/xml
      format: junit

macos_catalina_task:
  osx_instance:
    image: catalina-base

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  environment:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  install_dependencies_script:
    - brew install llvm bison flex cmake ninja python@3.8 sphinx-doc doxygen ccache
    - pip3 install "btest>=0.66" sphinx_rtd_theme

  configure_script:
    - ./configure --generator=Ninja --with-bison=/usr/local/opt/bison --with-flex=/usr/local/opt/flex --enable-ccache --enable-werror --prefix=/opt/spicy
  build_script:
    - ninja -C build all check
  test_build_script:
    - make -C tests test
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy*.tar.gz
    type: application/gzip

macos_big_sur_task:
  osx_instance:
    image: big-sur-base

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  environment:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  install_dependencies_script:
    - brew install bison flex cmake ninja python@3.8 sphinx-doc doxygen ccache
    - pip3 install btest sphinx_rtd_theme zkg

  configure_script:
    - ./configure --generator=Ninja --with-bison=/usr/local/opt/bison --with-flex=/usr/local/opt/flex --enable-ccache --enable-werror --prefix=/opt/spicy
  build_script:
    - ninja -C build all check
  test_build_script:
    - make -C tests test
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy*.tar.gz
    type: application/gzip

no_toolchain_task:
  container:
    dockerfile: ci/Dockerfile
    cpu: 4
    memory: 12G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:      ./ci/run-ci -b build configure release --build-toolchain no
  build_script:          ./ci/run-ci -b build build
  install_script:        ./ci/run-ci -b build install
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy*.tar.gz
    type: application/gzip

  on_failure:
    ci_artifacts:
      path: artifacts
    junit_artifacts:
      path: artifacts/diag.xml
      type: text/xml
      format: junit

validate_release_tarball_task:
  skip: $CIRRUS_BRANCH != 'main' && $CIRRUS_TAG == ''

  container:
    dockerfile: ci/Dockerfile
    cpu: 4
    memory: 12G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  create_tarball_script:
    - scripts/make-tarball.sh
  unpack_script:
    - mkdir /tmp/spicy-tarball
    - tar xf spicy*.tar.gz -C /tmp/spicy-tarball
    - cd /tmp/spicy-tarball/spicy-*
  configure_script:
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --enable-werror
  build_script:
    - ninja -j3 -C build
  test_build_script:
    - make -C tests test-build

homebrew_catalina_task:
  skip: $CIRRUS_BRANCH != 'main' && $CIRRUS_TAG == ''

  osx_instance:
    image: catalina-base

  script:
  - brew install spicy --HEAD
  - brew test spicy

homebrew_big_sur_task:
  skip: $CIRRUS_BRANCH != 'main' && $CIRRUS_TAG == ''

  osx_instance:
    image: big-sur-base

  script:
  - brew install spicy --HEAD
  - brew test spicy

docker_alpine_3_12_task:
  container:
    dockerfile: docker/Dockerfile.alpine-3.12
    cpu: 4
    memory: 14G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - LDFLAGS="-lucontext" ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --enable-werror
  build_script:
    - ninja -j4 -C build install
  test_install_script:
    - SPICY_INSTALLATION_DIRECTORY=/opt/spicy make -C tests test-install
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy*.tar.gz
    type: application/gzip

docker_centos_7_task:
  container:
    dockerfile: docker/Dockerfile.centos-7
    cpu: 4
    memory: 14G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - source scl_source enable devtoolset-9 && LDFLAGS="-static-libstdc++ -static-libgcc" ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --enable-werror
  build_script:
    - source scl_source enable devtoolset-9 && ninja -j4 -C build check all package
    - cp build/spicy*.rpm .
    - rpm -i ./spicy*.rpm
    - rm -rf build
  test_install_script:
    - source scl_source enable devtoolset-9 && SPICY_INSTALLATION_DIRECTORY=/opt/spicy make -C tests test-install

  packages_artifacts:
    path: ./spicy*.{deb,rpm}
    type: application/gzip

docker_centos_8_task:
  container:
    dockerfile: docker/Dockerfile.centos-8
    cpu: 4
    memory: 14G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    # TODO(bbannier): We do not enable -Werror on centos8 since it ships with
    # flex-2.6.1 which generates code which triggers sign-compare diagnostics.
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy
  build_script:
    - ninja -j4 -C build check all package
    - cp build/spicy*.rpm .
    - rpm -i ./spicy*.rpm
    - rm -rf build
  test_install_script:
    - SPICY_INSTALLATION_DIRECTORY=/opt/spicy make -C tests test-install

  packages_artifacts:
    path: ./spicy*.{deb,rpm}
    type: application/gzip

docker_debian9_task:
  skip: $CIRRUS_BRANCH != 'main' && $CIRRUS_TAG == ''

  container:
    dockerfile: docker/Dockerfile.debian-9
    cpu: 4
    memory: 12G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --enable-werror
  build_script:
    - ninja -j4 -C build check all package
    - cp build/spicy*.deb .
    - dpkg --install ./spicy*.deb
    - rm -rf build
  test_install_script:
    - SPICY_INSTALLATION_DIRECTORY=/opt/spicy make -C tests test-install

  packages_artifacts:
    path: ./spicy*.{deb,rpm}
    type: application/gzip

docker_debian10_task:
  skip: $CIRRUS_BRANCH != 'main' && $CIRRUS_TAG == ''

  container:
    dockerfile: docker/Dockerfile.debian-10
    cpu: 4
    memory: 12G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --enable-werror
  build_script:
    - ninja -j4 -C build check all package
    - cp build/spicy*.deb .
    - dpkg --install ./spicy*.deb
    - rm -rf build
  test_install_script:
    - SPICY_INSTALLATION_DIRECTORY=/opt/spicy make -C tests test-install

  packages_artifacts:
    path: ./spicy*.{deb,rpm}
    type: application/gzip

docker_ubuntu16_task:
  skip: $CIRRUS_BRANCH != 'main' && $CIRRUS_TAG == ''

  container:
    dockerfile: docker/Dockerfile.ubuntu-16
    cpu: 4
    memory: 12G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    # TODO(bbannier): We do not enable -Werror on ubuntu16 since there
    # the generated flex scanners trigger null-conversion diagnostics.
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy
  build_script:
    - ninja -j4 -C build check all package
    - cp build/spicy*.deb .
    - dpkg --install ./spicy*.deb
    - rm -rf build
  test_install_script:
    - SPICY_INSTALLATION_DIRECTORY=/opt/spicy make -C tests test-install

  packages_artifacts:
    path: ./spicy*.{deb,rpm}
    type: application/gzip

docker_ubuntu18_task:
  skip: $CIRRUS_BRANCH != 'main' && $CIRRUS_TAG == ''

  container:
    dockerfile: docker/Dockerfile.ubuntu-18
    cpu: 4
    memory: 12G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --enable-werror
  build_script:
    - ninja -j4 -C build check all package
    - cp build/spicy*.deb .
    - dpkg --install ./spicy*.deb
    - rm -rf build
  test_install_script:
    - SPICY_INSTALLATION_DIRECTORY=/opt/spicy make -C tests test-install

  packages_artifacts:
    path: ./spicy*.{deb,rpm}
    type: application/gzip

docker_ubuntu20_task:
  skip: $CIRRUS_BRANCH != 'main' && $CIRRUS_TAG == ''

  container:
    dockerfile: docker/Dockerfile.ubuntu-20
    cpu: 4
    memory: 12G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --enable-werror
  build_script:
    - ninja -j4 -C build check all package
    - cp build/spicy*.deb .
    - dpkg --install ./spicy*.deb
    - rm -rf build
  test_install_script:
    - SPICY_INSTALLATION_DIRECTORY=/opt/spicy make -C tests test-install

  packages_artifacts:
    path: ./spicy*.{deb,rpm}
    type: application/gzip

docker_fedora32_task:
  skip: $CIRRUS_BRANCH != 'main' && $CIRRUS_TAG == ''

  container:
    dockerfile: docker/Dockerfile.fedora-32
    cpu: 4
    memory: 12G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --enable-werror
  build_script:
    - ninja -j4 -C build check all package
    - cp build/spicy*.rpm .
    - rpm -i ./spicy*.rpm
    - rm -rf build
  test_install_script:
    - SPICY_INSTALLATION_DIRECTORY=/opt/spicy make -C tests test-install

  packages_artifacts:
    path: ./spicy*.{deb,rpm}
    type: application/gzip

docker_fedora33_task:
  skip: $CIRRUS_BRANCH != 'main' && $CIRRUS_TAG == ''

  container:
    dockerfile: docker/Dockerfile.fedora-33
    cpu: 4
    memory: 12G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --enable-werror
  build_script:
    - ninja -j4 -C build check all package
    - cp build/spicy*.rpm .
    - rpm -i ./spicy*.rpm
    - rm -rf build
  test_install_script:
    - SPICY_INSTALLATION_DIRECTORY=/opt/spicy make -C tests test-install

  packages_artifacts:
    path: ./spicy*.{deb,rpm}
    type: application/gzip

docker_opensuse15_2_task:
  skip: $CIRRUS_BRANCH != 'main' && $CIRRUS_TAG == ''

  container:
    dockerfile: docker/Dockerfile.opensuse-15.2
    cpu: 4
    memory: 12G

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --enable-werror
  build_script:
    - ninja -j4 -C build check all package
    - cp build/spicy*.rpm .
    - rpm -i ./spicy*.rpm
    - rm -rf build
  test_install_script:
    - SPICY_INSTALLATION_DIRECTORY=/opt/spicy make -C tests test-install

  packages_artifacts:
    path: ./spicy*.{deb,rpm}
    type: application/gzip

freebsd11_task:
  freebsd_instance:
    image_family: freebsd-11-4
    cpu: 8
    memory: 8GB

  prepare_script: ./ci/prepare_freebsd.sh

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --with-flex=/usr/local --with-bison=/usr/local --with-cxx-compiler=clang++11 --with-c-compiler=clang11 --enable-werror
  build_script:
    - ninja -j4 -C build install
  test_install_script:
    - SPICY_INSTALLATION_DIRECTORY=/opt/spicy make -C tests test
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy*.tar.gz
    type: application/gzip

freebsd12_task:
  allow_failures: true
  freebsd_instance:
    image_family: freebsd-12-2
    cpu: 8
    memory: 8GB

  prepare_script: ./ci/prepare_freebsd.sh

  timeout_in: 120m

  always:
    ccache_cache:
      folder: /tmp/ccache
      fingerprint_script: echo $CIRRUS_TASK_NAME-$CIRRUS_OS

  env:
    CCACHE_DIR: /tmp/ccache
    CCACHE_COMPRESS: 1

  # Pull tags as well since by default Cirrus CI does not fetch them, but they
  # are needed for `git describe` used in `scripts/autogen-version`. We also
  # pull submodules here.
  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  configure_script:
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --with-flex=/usr/local --with-bison=/usr/local --enable-werror
  build_script:
    - ninja -j4 -C build install
  test_install_script:
    - SPICY_INSTALLATION_DIRECTORY=/opt/spicy make -C tests test
  packaging_script:
    - ninja -C build package

  packages_artifacts:
    path: build/spicy*.tar.gz
    type: application/gzip

zeek_plugin_task:
  timeout_in: 120m
  container:
    dockerfile: ci/Dockerfile
    matrix:
      - docker_arguments:
        - ZEEK_LTS:
        - ZEEK_VERSION: 4.0.2-0
    cpu: 4
    memory: 12G

  update_git_script:
    - git fetch --tags
    - git submodule update --recursive --init

  install_spicy_script:
    - ./configure --generator=Ninja --enable-ccache --prefix=/opt/spicy --enable-werror
    - ninja -j4 -C build install
    - rm -rf build

  install_plugin_script:
    - git clone --branch=${SPICY_PLUGIN_BRANCH} --recurse-submodules https://github.com/zeek/spicy-plugin
    - (cd spicy-plugin && mkdir build && cd build && PATH=/opt/spicy/bin:$PATH cmake -DCMAKE_INSTALL_PREFIX=/opt/spicy-plugin -G Ninja .. && ninja install)
    - rm -rf spicy-plugin/build
    - zeek -NN _Zeek::Spicy

  install_analyzers_script:
    - git clone --branch=${SPICY_PLUGIN_BRANCH} --recurse-submodules https://github.com/zeek/spicy-analyzers
    - (cd spicy-analyzers && mkdir build && cd build && PATH=/opt/spicy/bin:/opt/spicy-plugin/bin:$PATH cmake -DCMAKE_INSTALL_PREFIX=/opt/spicy-analyzers -G Ninja .. && ninja install)
    - rm -rf spicy-analyzers/build
    - zeek -NN _Zeek::Spicy
    - zeek -NN _Zeek::Spicy | grep -q ANALYZER_SPICY_TFTP

  test_plugin_script:
    - (PATH=/opt/spicy-plugin/bin:$PATH make -C spicy-plugin/tests test-install)

  test_analyzer_script:
    - (PATH=/opt/spicy-plugin/bin:$PATH make -C spicy-analyzers/tests test-install)

  check_script:
    - (cd /tmp && zeek -r ${CIRRUS_WORKING_DIR}/spicy-analyzers/tests/Traces/tftp_rrq.pcap spicy-analyzers && test -e tftp.log && grep rfc1350.txt tftp.log)
